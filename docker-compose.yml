services:
  api:
        container_name: my-e-lib-api
        build:
            context: .
            dockerfile: src/Hosts/MyELib.Hosts.Api/Dockerfile
        ports:
          - 5000:5000
          - 5001:5001
        environment:
          - ConnectionStrings__PostgresMyELibDb=Host=my-e-lib-db;Database=Lib;Username=postgres;Password=password;Port=5432;
          - ASPNETCORE_ENVIRONMENT=Development 
          - ASPNETCORE_URLS=http://+:5000 
          - ASPNETCORE_HTTP_PORTS=5000
          - ASPNETCORE_HTTP_PORTS=5001
        networks:
          - my-e-lib
        depends_on:
            postgres:
                condition: service_healthy 

  migrator:
        container_name: my-e-lib-migrator
        build:
            context: .
            dockerfile: src/Hosts/MyELib.Hosts.Migrator/Dockerfile
        environment:
          - ConnectionStrings__PostgresMyELibDb=Host=my-e-lib-db;Database=Lib;Username=postgres;Password=password;Port=5432;
        networks:
          - my-e-lib
        depends_on:
            postgres:
                condition: service_healthy      
        restart: on-failure:5

  postgres:
        container_name: my-e-lib-db
        image: postgres
        environment:
            POSTGRES_DB: Lib
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
        volumes:
          - pg-data:/var/lib/postgresql/data
        ports:
          - 5432:5432
        networks:
          - my-e-lib
        healthcheck:
          test: ["CMD-SHELL", "pg_isready -U postgres"]
          interval: 5s
          timeout: 5s
          retries: 5

  client:
        container_name: my-e-lib-client
        build:
            context: .
            dockerfile: src/Clients/MyELib.Clients.Web/Dockerfile
        ports:
          - 4200:80
        networks:
          - my-e-lib
        depends_on:
          api:
            condition: service_started

volumes:
  pg-data:

networks:
  my-e-lib:
    driver: bridge